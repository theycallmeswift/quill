#!/usr/bin/env node
var argv = process.argv.slice(2)
  , fs   = require("fs")
  , fd   = require("path")
  , wrench = require('wrench');

var expandPath = function(path, dir){
  if (fd.basename(path) == path) {
    path = dir + path
  }
  return fd.normalize(path);
};

var dasherize = function(str){
  return str.trim(str).toLowerCase().replace(/[_\s]+/g, '-').replace(/([A-Z])/g, '-$1').replace(/-+/g, '-');
};

var copyFile = function(source, target) {
  var is = fs.createReadStream(source);
  var os = fs.createWriteStream(target);
  is.pipe(os);
};

var help = [
  "usage: quill [options] ",
  "",
  "Generates a Quill blog using the specified command-line options",
  "",
  "options:",
  " new path             Generates a new Quill blog",
  " post \"Post Title\"    Generates a new Quill post for the current blog"
].join('\n');

var generators = {};

generators['new'] = function() {
  var path     = fd.normalize(argv[1]);

  // Create parent dir
  if (fs.existsSync(path)) throw(path + " already exists");
  fs.mkdirSync(path, 0775);

  var baseDir = __dirname + '/../'
    , sourceDir
    , targetDir;

  sourceDir = expandPath('themes', baseDir);
  targetDir = expandPath('themes', path + "/");

  wrench.copyDirRecursive(sourceDir, targetDir, function(err) {
    if (err) throw(err);

    sourceDir = expandPath('quill', baseDir);
    targetDir = expandPath('quill', path + "/");

    wrench.copyDirRecursive(sourceDir, targetDir, function(err) {
      if (err) throw(err);

      fs.mkdirSync(expandPath('posts', path + '/'), 0775);

      sourceDir = expandPath('quill.js', baseDir);
      targetDir = expandPath('quill.js', path + "/");

      copyFile(sourceDir, targetDir);

      sourceDir = expandPath('package.json', baseDir + 'quill/scaffolding/');
      targetDir = expandPath('package.json', path + "/");

      var package = require(sourceDir);
      package.name = dasherize(argv[1]);
      fs.writeFileSync(targetDir, JSON.stringify(package));

      sourceDir = expandPath('config.json', baseDir);
      targetDir = expandPath('config.json', path + "/");

      copyFile(sourceDir, targetDir);

    });
  });
}

generators.post = function() {
  var timestamp = Math.round(new Date().getTime() / 1000)
  var template = process.cwd() + "/posts/";
  var filename = timestamp + "-" + dasherize(argv[1]) + ".md";
  var fullpath = expandPath(filename, template);

  fs.writeFile(fullpath, "", function() {
    console.log("Successfully created post: " + fullpath);
  });
};

if (generators[argv[0]]) {
  generators[argv[0]]();
} else {
  console.log(help);
}
